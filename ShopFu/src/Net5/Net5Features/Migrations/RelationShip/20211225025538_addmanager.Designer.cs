// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Net5Features.Relationship;

#nullable disable

namespace Net5Features.Migrations.RelationShip
{
    [DbContext(typeof(RelationShipContext))]
    [Migration("20211225025538_addmanager")]
    partial class addmanager
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.Attendee", b =>
                {
                    b.Property<int>("AttendeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendeeId"), 1L, 1);

                    b.Property<int>("MyShadowFk")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OptionalTrackId")
                        .HasColumnType("int");

                    b.HasKey("AttendeeId");

                    b.HasIndex("MyShadowFk")
                        .IsUnique();

                    b.HasIndex("OptionalTrackId")
                        .IsUnique();

                    b.ToTable("Attendee");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.ContactInfo", b =>
                {
                    b.Property<int>("ContactInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactInfoId"), 1L, 1);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LandlineNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactInfoId");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.EmployeeShortFk", b =>
                {
                    b.Property<int>("EmployeeShortFkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeShortFkId"), 1L, 1);

                    b.Property<int?>("ManagerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeShortFkId");

                    b.HasIndex("ManagerId")
                        .IsUnique();

                    b.ToTable("EmployeeShortFk");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.LibraryBook", b =>
                {
                    b.Property<int>("LibraryBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LibraryBookId"), 1L, 1);

                    b.Property<int>("LibrarianPersonId")
                        .HasColumnType("int");

                    b.Property<int>("LibrarianUserId")
                        .HasMaxLength(256)
                        .HasColumnType("int");

                    b.Property<int?>("OnLoanToPersonId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LibraryBookId");

                    b.HasIndex("LibrarianPersonId");

                    b.HasIndex("OnLoanToPersonId");

                    b.ToTable("LibraryBook");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.OptionalTrack", b =>
                {
                    b.Property<int>("OptionalTrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionalTrackId"), 1L, 1);

                    b.Property<int>("Track")
                        .HasColumnType("int");

                    b.HasKey("OptionalTrackId");

                    b.ToTable("OptionalTrack");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.RequiredTrack", b =>
                {
                    b.Property<int>("RequiredTrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequiredTrackId"), 1L, 1);

                    b.Property<int>("Track")
                        .HasColumnType("int");

                    b.HasKey("RequiredTrackId");

                    b.ToTable("RequiredTrack");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.ShadowAttendee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShadowAttendee");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.ShadowAttendeeNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShadowAttendeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShadowAttendeeId");

                    b.ToTable("ShadowAttendeeNote");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.TicketOption1", b =>
                {
                    b.Property<int>("TicketOption1Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketOption1Id"), 1L, 1);

                    b.HasKey("TicketOption1Id");

                    b.ToTable("TicketOption1");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.TicketOption2", b =>
                {
                    b.Property<int>("TicketOption2Id")
                        .HasColumnType("int");

                    b.HasKey("TicketOption2Id");

                    b.ToTable("TicketOption2");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.Attendee", b =>
                {
                    b.HasOne("Net5Features.Relationship.ReDomain.RequiredTrack", "Required")
                        .WithOne("Attend")
                        .HasForeignKey("Net5Features.Relationship.ReDomain.Attendee", "MyShadowFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Net5Features.Relationship.ReDomain.OptionalTrack", "Optional")
                        .WithOne("Attend")
                        .HasForeignKey("Net5Features.Relationship.ReDomain.Attendee", "OptionalTrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Optional");

                    b.Navigation("Required");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.ContactInfo", b =>
                {
                    b.HasOne("Net5Features.Relationship.ReDomain.Person", null)
                        .WithOne("ContactInfo")
                        .HasForeignKey("Net5Features.Relationship.ReDomain.ContactInfo", "EmailAddress")
                        .HasPrincipalKey("Net5Features.Relationship.ReDomain.Person", "Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.EmployeeShortFk", b =>
                {
                    b.HasOne("Net5Features.Relationship.ReDomain.EmployeeShortFk", "Manager")
                        .WithOne()
                        .HasForeignKey("Net5Features.Relationship.ReDomain.EmployeeShortFk", "ManagerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.LibraryBook", b =>
                {
                    b.HasOne("Net5Features.Relationship.ReDomain.Person", "Librarian")
                        .WithMany("LibrarianBooks")
                        .HasForeignKey("LibrarianPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Net5Features.Relationship.ReDomain.Person", "OnLoanTo")
                        .WithMany("BooksBorrowedByMe")
                        .HasForeignKey("OnLoanToPersonId");

                    b.Navigation("Librarian");

                    b.Navigation("OnLoanTo");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.ShadowAttendee", b =>
                {
                    b.HasOne("Net5Features.Relationship.ReDomain.TicketOption1", "TicketOption1")
                        .WithOne("Attendee")
                        .HasForeignKey("Net5Features.Relationship.ReDomain.ShadowAttendee", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TicketOption1");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.ShadowAttendeeNote", b =>
                {
                    b.HasOne("Net5Features.Relationship.ReDomain.ShadowAttendee", null)
                        .WithMany("Notes")
                        .HasForeignKey("ShadowAttendeeId");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.TicketOption2", b =>
                {
                    b.HasOne("Net5Features.Relationship.ReDomain.ShadowAttendee", "Attendee")
                        .WithOne("TicketOption2")
                        .HasForeignKey("Net5Features.Relationship.ReDomain.TicketOption2", "TicketOption2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendee");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.OptionalTrack", b =>
                {
                    b.Navigation("Attend")
                        .IsRequired();
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.Person", b =>
                {
                    b.Navigation("BooksBorrowedByMe");

                    b.Navigation("ContactInfo")
                        .IsRequired();

                    b.Navigation("LibrarianBooks");
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.RequiredTrack", b =>
                {
                    b.Navigation("Attend")
                        .IsRequired();
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.ShadowAttendee", b =>
                {
                    b.Navigation("Notes");

                    b.Navigation("TicketOption2")
                        .IsRequired();
                });

            modelBuilder.Entity("Net5Features.Relationship.ReDomain.TicketOption1", b =>
                {
                    b.Navigation("Attendee")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
